[{"C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\index.js":"1","C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\App.js":"2","C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\routes\\Router.js":"3","C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\global\\GlobalState.js":"4","C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\global\\GlobalStateContext.js":"5","C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\constants\\urls.js":"6","C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\Pages\\PokeListPage\\index.js":"7","C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\Pages\\PokedexPage\\index.js":"8","C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\Pages\\PokeDetailsPage\\index.js":"9","C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\Pages\\PokeListPage\\styles.js":"10","C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\Pages\\PokedexPage\\styles.js":"11","C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\Components\\CardPokedex\\index.js":"12","C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\Pages\\PokeDetailsPage\\styles.js":"13","C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\Components\\PokeCard\\styles.js":"14"},{"size":219,"mtime":1610387731312,"results":"15","hashOfConfig":"16"},{"size":197,"mtime":1610387731292,"results":"17","hashOfConfig":"16"},{"size":1199,"mtime":1610387731312,"results":"18","hashOfConfig":"16"},{"size":1346,"mtime":1610387731302,"results":"19","hashOfConfig":"16"},{"size":111,"mtime":1610387731302,"results":"20","hashOfConfig":"16"},{"size":51,"mtime":1610387731302,"results":"21","hashOfConfig":"16"},{"size":1970,"mtime":1610924848196,"results":"22","hashOfConfig":"16"},{"size":1016,"mtime":1610762264260,"results":"23","hashOfConfig":"16"},{"size":681,"mtime":1610930257745,"results":"24","hashOfConfig":"16"},{"size":1298,"mtime":1610924848215,"results":"25","hashOfConfig":"16"},{"size":297,"mtime":1610762264315,"results":"26","hashOfConfig":"16"},{"size":1285,"mtime":1610762264125,"results":"27","hashOfConfig":"16"},{"size":1220,"mtime":1610930287665,"results":"28","hashOfConfig":"16"},{"size":323,"mtime":1610924848138,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1xotpqp",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\index.js",[],["62","63"],"C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\App.js",[],"C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\routes\\Router.js",[],"C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\global\\GlobalState.js",[],"C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\global\\GlobalStateContext.js",[],"C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\constants\\urls.js",[],"C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\Pages\\PokeListPage\\index.js",["64","65","66","67"],"import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, ButtonsContainer, Card, MainContainer, NavBar, PokemonContainer } from './styles'\nimport GlobalStateContext from '../../global/GlobalStateContext';\n\n\n\nconst PokeListPage = () => {\n  const ObjectFromGlobalState = useContext(GlobalStateContext)\n  \n\n\n  const AddToPokedex = (i) => {\n    const pokemonAdd = ObjectFromGlobalState.data.pokemons.filter((pokemon) =>{\n      if (pokemon.id == i) {return true}\n    })\n\n    /*Criando função para verificar duplicatas, vou somar um numero que deverá ser zero caso o pokemon não esteja na lista */\n    let checarDuplicatas = 0;\n    ObjectFromGlobalState.data.pokedex.map((pokemon) => {\n      if(pokemon[0].id == i) {\n        checarDuplicatas = checarDuplicatas + 1;\n      }\n    })\n    /*________________________________________________________________________________________________________________*/\n\n    const newPokedex = checarDuplicatas ? [...ObjectFromGlobalState.data.pokedex] : [...ObjectFromGlobalState.data.pokedex, pokemonAdd];\n    ObjectFromGlobalState.data.setPokedex(newPokedex) \n    //console.log(newPokedex)\n  }\n\n  return (\n    <MainContainer>\n      <NavBar>\n        <Link to={'/pokedex'}>\n          <Button >Ir para PokéDex</Button>\n        </Link>\n        <h1>Lista de pokémons</h1>\n      </NavBar>\n      <PokemonContainer>\n        {ObjectFromGlobalState.data.pokemons.map((poke) => {\n          return (\n            <Card key={poke.id} pokemon={poke}>\n              <img src={poke.sprites && poke.sprites.front_default} alt={poke.name} />\n              <p>{poke.name}</p>\n              <ButtonsContainer>\n                <Button onClick={() => {AddToPokedex(poke.id)}  }>Adicionar à pokédex</Button>\n                <Button>Ver detalhes</Button>\n              </ButtonsContainer>\n            </Card>\n          )\n        })}\n      </PokemonContainer>\n    </MainContainer>\n  )\n}\n\nexport default PokeListPage","C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\Pages\\PokedexPage\\index.js",["68"],"import React from 'react';\nimport { useState, useContext } from 'react';\nimport CardPokedex from '../../Components/CardPokedex/index';\nimport GlobalStateContext from '../../global/GlobalStateContext';\nimport PokedexWraper from './styles';\nimport './styles_css.css';\n\nconst PokedexPage = () => {\n\n    const ObjectFromGlobalState = useContext(GlobalStateContext)\n\n\n    return (\n        <div className=\"fullpokedex\">\n            {ObjectFromGlobalState.data.pokedex.map((pokemon) => {\n                return (\n                    <PokedexWraper>\n                    <CardPokedex\n                        key={pokemon[0].id}\n                        imagem={pokemon[0].sprites && pokemon[0].sprites.front_default}\n                        nome={pokemon[0].name}\n                        tipo={pokemon[0].types}\n                        id={pokemon[0].id}\n                    />\n                    </PokedexWraper>\n                )\n            }\n            )\n            }\n        </div>\n    )\n}\n\nexport default PokedexPage;","C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\Pages\\PokeDetailsPage\\index.js",["69","70","71","72"],"C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\Pages\\PokeListPage\\styles.js",[],"C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\Pages\\PokedexPage\\styles.js",[],"C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\Components\\CardPokedex\\index.js",["73","74"],"import React from 'react';\nimport CardWrapper from '../PokeCard/styles';\nimport {useContext } from 'react';\nimport { Button, ButtonsContainer} from '../../Pages/PokeListPage/styles'\nimport GlobalStateContext from '../../global/GlobalStateContext';\n\nconst CardPokedex = (props) => {\n    const { imagem, nome, tipo, id } = props;\n    const ObjectFromGlobalState = useContext(GlobalStateContext)\n\n    const deletePokemon = (i) => {\n        //console.log(i)\n        const newPokedex = ObjectFromGlobalState.data.pokedex.filter((pokemon) =>{\n            if (pokemon[0].id == i) {return false} else {return true}\n          })\n          ObjectFromGlobalState.data.setPokedex(newPokedex) \n    }\n\n    return (\n        <CardWrapper>\n            <div> <img src={imagem} /> </div>\n            <div> Nome: {nome} </div>\n            <div> Tipos: {\n                    tipo.map((tipos) => {\n                      return (\n                          <div> {tipos.type.name} </div>  \n                    )}\n                    )\n                } </div>\n            <ButtonsContainer>\n                <Button onClick={() => {deletePokemon(id)}}>Deletar</Button>\n                <Button>Ver Detalhes</Button>\n            </ButtonsContainer>    \n        </CardWrapper>\n    )\n}\n\nexport default CardPokedex;","C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\Pages\\PokeDetailsPage\\styles.js",[],"C:\\Users\\re041636\\Desktop\\tang-pokedex10\\pokedex-tang-ten\\src\\Components\\PokeCard\\styles.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":14,"column":77,"nodeType":"81","messageId":"82","endLine":14,"endColumn":79},{"ruleId":"83","severity":1,"message":"84","line":15,"column":22,"nodeType":"85","messageId":"86","endLine":15,"endColumn":24},{"ruleId":"79","severity":1,"message":"87","line":20,"column":54,"nodeType":"81","messageId":"88","endLine":20,"endColumn":56},{"ruleId":"83","severity":1,"message":"84","line":21,"column":24,"nodeType":"85","messageId":"86","endLine":21,"endColumn":26},{"ruleId":"89","severity":1,"message":"90","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":1,"column":16,"nodeType":"91","messageId":"92","endLine":1,"endColumn":24},{"ruleId":"89","severity":1,"message":"93","line":6,"column":10,"nodeType":"91","messageId":"92","endLine":6,"endColumn":16},{"ruleId":"89","severity":1,"message":"94","line":6,"column":18,"nodeType":"91","messageId":"92","endLine":6,"endColumn":22},{"ruleId":"89","severity":1,"message":"95","line":6,"column":24,"nodeType":"91","messageId":"92","endLine":6,"endColumn":28},{"ruleId":"83","severity":1,"message":"84","line":14,"column":31,"nodeType":"85","messageId":"86","endLine":14,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":21,"column":19,"nodeType":"98","endLine":21,"endColumn":39},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'imagem' is assigned a value but never used.","'nome' is assigned a value but never used.","'tipo' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]